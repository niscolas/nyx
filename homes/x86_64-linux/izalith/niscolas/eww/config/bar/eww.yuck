(defpoll battery_status :interval "5s" "my-battery")
(defpoll cpu_temp :interval "5s" "my-thermals --cpu")
(defpoll current_specialisation :interval "10s" "cat /etc/current-specialisation")
;; (defpoll gpu_temp :interval "5s" "my-thermals --gpu")
(defpoll clock_time :interval "1m" "scripts/clock.nu")
(defpoll memory :interval "15s" "scripts/ram_usage_percent.nu")

(deflisten workspaces_content "tail -F ~/.cache/eww_workspaces")

(defvar eww "eww -c ~/.config/eww/bar")

(defwidget workspaces_widget []
    (box
        :class "workspaces-widget"
        :orientation "h"
        :space-evenly false 
        (label :text " " :class "workspaces-prefix")
        (literal :content workspaces_content)
        (label :class "workspaces-suffix")
))

(defwidget battery_widget []
    (box
        :class "battery-widget"
        :hexpand false
        :space-evenly false 
        :vexpand false
        (label :class "battery-label" :text battery_status)
))

(defwidget temperature_widget []
    (box
        :class "temperature-widget"
        :hexpand false
        :space-evenly false 
        :vexpand false
        (label :class "thermometer-label" :text " ")
        (label :class "cpu-temperature-label" :text cpu_temp)
        ;; (label :class "gpu-temperature-label" :text gpu_temp)
))

(defwidget specialisation_widget []
    (box
        :class "specialisation-widget"
        :hexpand false
        :space-evenly false
        :vexpand false
        (label :class "specialisation-prefix" :text "󱄅 ")
        (label :class "specialisation-label" :text current_specialisation)
))

(defwidget ram_widget []
    (box :class "mem_module" :vexpand false :hexpand false
        (circular-progress
            :value memory
            :class "membar"
            :thickness 4
            (button
                :class "iconmem"
                :limit-width 2
                :tooltip "using ${memory}% ram"
                :onclick "scripts/pop system"
                :show_truncated false
                :wrap false
                "")
)))

(defwidget separator_widget []
    (box
        :hexpand false
        :vexpand false
        (label :class "separator")
))

(defwidget separator_minimum_widget []
    (box
        :hexpand false
        :vexpand false
        (label :class "separator-minimum")
))

(defwidget clock_widget []
    (box
        :class "clock-widget"
        :orientation "h"
        :space-evenly false
        :spacing "3"
        (label :text " " :class "clock-prefix")
        (button
            :class "clock-label"
            :onclick "firefox https://calendar.google.com/" clock_time)
        (label :class "clock-suffix")
))

(defwidget system_widget []
	(box
        :class "system-widget"
        :space-evenly false
        (label :text " " :class "system-prefix")
        (box
            :class "system-content"
            :space-evenly false
            (battery_widget)
            (separator_minimum_widget)
            (separator_minimum_widget)
            (temperature_widget)
            (separator_minimum_widget)
            (separator_minimum_widget)
            (specialisation_widget))
        (label :class "system-suffix")
))

(defwidget left []
    (box
        :class "left_modules"
        :space-evenly false
        :halign "start"
        :orientation "h"
        (workspaces_widget)
))

(defwidget center []
	(box
        :class "center_modules"
        :halign "center"
        :orientation "h"
        :space-evenly false
        (clock_widget)
))

(defwidget right []
	(box
        :class "right_modules"
        :halign "end"
        :orientation "h"
        :space-evenly false
        (system_widget)
))

(defwidget bar_widget []
    (box
        :class "bar-widget"
        :orientation "h"
        :space-evenly true
        :hexpand true
        (left)
        (center)
        (right)
))

(defwindow bar
    :geometry
        (geometry
            :y "1%"
            :width "98%"
            :height "40px"
            :anchor "top center")
    :stacking "bg"
    :wm-ignore false
    (bar_widget)
)
